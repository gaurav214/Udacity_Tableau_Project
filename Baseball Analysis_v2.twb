<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0305.1200                               -->
<workbook original-version='10.5' source-build='10.5.2 (10500.18.0305.1200)' source-platform='win' version='10.5' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='BaseballAnalysis_v2' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.5'>
      <aliases enabled='yes' />
      <column caption='StarBatAvg' datatype='real' name='[Bat Average Parameter (copy)]' param-domain-type='any' role='measure' type='quantitative' value='0.26700000000000002'>
        <calculation class='tableau' formula='0.26700000000000002' />
      </column>
      <column caption='HR Parameter' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='58.899999999999999'>
        <calculation class='tableau' formula='58.899999999999999' />
      </column>
      <column caption='Bat Average Parameter' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.248'>
        <calculation class='tableau' formula='0.248' />
      </column>
      <column caption='StarHR' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='144.0'>
        <calculation class='tableau' formula='144.0' />
      </column>
    </datasource>
    <datasource caption='baseball_data' inline='true' name='federated.0a5e1gw024yd1h15xy0in1soijg4' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='baseball_data' name='textscan.1ojpq3i0m6g1s71bg5fdd0ry5w8d'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:/Users/Gaurav/Downloads/baseball_data.csv' dataRefreshTime='' directory='C:/Users/Gaurav/Downloads' filename='C:/Users/Gaurav/AppData/Local/Temp/TableauTemp/1scduiq16fjl9a16hrglm0zewn9s/baseball_data.csv.xlsx' interpretationMode='8' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1ojpq3i0m6g1s71bg5fdd0ry5w8d' name='baseball_data.csv' table='[baseball_data#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:F1158:no:A1:F1158:1' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='string' name='handedness' ordinal='1' />
            <column datatype='integer' name='height' ordinal='2' />
            <column datatype='integer' name='weight' ordinal='3' />
            <column datatype='real' name='avg' ordinal='4' />
            <column datatype='integer' name='HR' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handedness</remote-name>
            <remote-type>130</remote-type>
            <local-name>[handedness]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>handedness</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>height</remote-name>
            <remote-type>20</remote-type>
            <local-name>[height]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>height</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weight]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>weight</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>avg</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HR]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>HR</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F1158:no:A1:F1158:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>4628</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' caption='Bat Average (bin)' datatype='integer' name='[Bat Average (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-4' formula='[avg]' peg='0' size='0.0172' />
      </column>
      <column caption='Ht/Wt Ratio' datatype='real' name='[Calculation_1025413391279890432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[height]/[weight]' />
      </column>
      <column caption='Quadrant Identifier' datatype='string' name='[Calculation_1025413391287848962]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF AVG([avg]) &gt;= [Parameters].[Parameter 2] AND AVG([HR]) &gt;= [Parameters].[Parameter 1] THEN &apos;Good&apos;&#13;&#10;ELSEIF AVG([avg]) &gt;= [Parameters].[Parameter 2] AND AVG([HR]) &lt; [Parameters].[Parameter 1] THEN &apos;Worst&apos;&#13;&#10;ELSEIF AVG([avg]) &lt; [Parameters].[Parameter 2] AND AVG([HR]) &gt;= [Parameters].[Parameter 1] THEN &apos;In-Consistent&apos;&#13;&#10;ELSE &apos;Consistent&apos;&#13;&#10;END' />
      </column>
      <column caption='Star/Potential' datatype='string' name='[Calculation_1025413391301644291]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF AVG([avg]) &gt;= [Parameters].[Bat Average Parameter (copy)] AND AVG([HR]) &gt;= [Parameters].[Parameter 3] THEN &apos;Star Player&apos;&#13;&#10;ELSE &apos;Potential&apos;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[HR]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Height (bin)' datatype='integer' name='[Height (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[height]' peg='0' size='1.98' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' caption='Weight (bin)' datatype='integer' name='[Weight (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-1' formula='[weight]' peg='0' size='7.6' />
      </column>
      <column caption='Bat Average' datatype='real' name='[avg]' role='measure' type='quantitative' />
      <column caption='Handedness' datatype='string' name='[handedness]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;B&quot;' value='Both Hands' />
          <alias key='&quot;L&quot;' value='Left Hand' />
          <alias key='&quot;R&quot;' value='Right Hand' />
        </aliases>
      </column>
      <column caption='Height' datatype='integer' name='[height]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Weight' datatype='integer' name='[weight]' role='measure' type='quantitative' />
      <column-instance column='[HR]' derivation='Avg' name='[avg:HR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg]' derivation='Avg' name='[avg:avg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[HR]' derivation='None' name='[none:HR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg]' derivation='None' name='[none:avg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[handedness]' derivation='None' name='[none:handedness:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg]' derivation='Sum' name='[sum:avg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1025413391287848962]' derivation='User' name='[usr:Calculation_1025413391287848962:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1025413391301644291]' derivation='User' name='[usr:Calculation_1025413391301644291:nk]' pivot='key' type='nominal' />
      <group caption='Action (Name)' hidden='true' name='[Action (Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[name]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Gaurav/Desktop/baseball_data.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/30/2018 02:24:54 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='1157' timestamp-start='2018-03-30 14:24:54.756' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name</remote-alias>
              <ordinal>0</ordinal>
              <family>baseball_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1157</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>handedness</remote-name>
              <remote-type>129</remote-type>
              <local-name>[handedness]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>handedness</remote-alias>
              <ordinal>1</ordinal>
              <family>baseball_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>height</remote-name>
              <remote-type>20</remote-type>
              <local-name>[height]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>height</remote-alias>
              <ordinal>2</ordinal>
              <family>baseball_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weight</remote-name>
              <remote-type>20</remote-type>
              <local-name>[weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weight</remote-alias>
              <ordinal>3</ordinal>
              <family>baseball_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>56</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg</remote-alias>
              <ordinal>4</ordinal>
              <family>baseball_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>135</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HR</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HR</remote-alias>
              <ordinal>5</ordinal>
              <family>baseball_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>179</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.276923' measure-ordering='alphabetic' measure-percentage='0.452747' parameter-percentage='0.27033' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:handedness:nk]' palette='green_gold_10_0' type='palette'>
            <map to='#146c36'>
              <bucket>&quot;R&quot;</bucket>
            </map>
            <map to='#60a656'>
              <bucket>&quot;L&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;B&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1025413391287848962:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Consistent&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Worst&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;In-Consistent&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Good&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1025413391301644291:nk]' palette='green_orange_cyan_yellow_10_0' type='palette'>
            <map to='#4e9f50'>
              <bucket>&quot;Potential&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Star Player&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:avg:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0a5e1gw024yd1h15xy0in1soijg4].[sum:avg:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0a5e1gw024yd1h15xy0in1soijg4]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0a5e1gw024yd1h15xy0in1soijg4].[pcto:sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0a5e1gw024yd1h15xy0in1soijg4].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:HR:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='name' />
        <field-sort-custom-order field='handedness' />
        <field-sort-custom-order field='height' />
        <field-sort-custom-order field='weight' />
        <field-sort-custom-order field='Calculation_1025413391279890432' />
        <field-sort-custom-order field='avg' />
        <field-sort-custom-order field='Calculation_1025413391301644291' />
        <field-sort-custom-order field='HR' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='StarBatAvg' datatype='real' name='[Bat Average Parameter (copy)]' param-domain-type='any' role='measure' type='quantitative' value='0.26700000000000002'>
          <calculation class='tableau' formula='0.26700000000000002' />
        </column>
        <column caption='HR Parameter' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='58.899999999999999'>
          <calculation class='tableau' formula='58.899999999999999' />
        </column>
        <column caption='Bat Average Parameter' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.248'>
          <calculation class='tableau' formula='0.248' />
        </column>
        <column caption='StarHR' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='144.0'>
          <calculation class='tableau' formula='144.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Overall Performance' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Count of Players'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='baseball_data' name='federated.0a5e1gw024yd1h15xy0in1soijg4' />
          </datasources>
          <datasource-dependencies datasource='federated.0a5e1gw024yd1h15xy0in1soijg4'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Handedness' datatype='string' name='[handedness]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;B&quot;' value='Both Hands' />
                <alias key='&quot;L&quot;' value='Left Hand' />
                <alias key='&quot;R&quot;' value='Right Hand' />
              </aliases>
            </column>
            <column-instance column='[handedness]' derivation='None' name='[none:handedness:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:handedness:nk]' />
              <wedge-size column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[pcto:sum:Number of Records:qk]' />
              <size column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Home runs By Bat Average'>
      <table>
        <view>
          <datasources>
            <datasource caption='baseball_data' name='federated.0a5e1gw024yd1h15xy0in1soijg4' />
          </datasources>
          <datasource-dependencies datasource='federated.0a5e1gw024yd1h15xy0in1soijg4'>
            <column aggregation='None' caption='Bat Average (bin)' datatype='integer' name='[Bat Average (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-4' formula='[avg]' peg='0' size='0.0172' />
            </column>
            <column datatype='integer' name='[HR]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[HR]' derivation='Avg' name='[avg:HR:qk]' pivot='key' type='quantitative' />
            <column caption='Bat Average' datatype='real' name='[avg]' role='measure' type='quantitative' />
            <column-instance column='[Bat Average (bin)]' derivation='None' name='[none:Bat Average (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Bat Average (bin)]' derivation='None' name='[none:Bat Average (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:Bat Average (bin):ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Bat Average (bin):ok]' />
              <groupfilter function='member' level='[none:Bat Average (bin):ok]' member='0' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:Bat Average (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0a5e1gw024yd1h15xy0in1soijg4].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0a5e1gw024yd1h15xy0in1soijg4].[sum:Number of Records:qk] + [federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk])</rows>
        <cols>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:Bat Average (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0a5e1gw024yd1h15xy0in1soijg4].[Bat Average (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Overall Performance'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#b07aa1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='baseball_data' name='federated.0a5e1gw024yd1h15xy0in1soijg4' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='HR Parameter' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='58.899999999999999'>
              <calculation class='tableau' formula='58.899999999999999' />
            </column>
            <column caption='Bat Average Parameter' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.248'>
              <calculation class='tableau' formula='0.248' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0a5e1gw024yd1h15xy0in1soijg4'>
            <column caption='Ht/Wt Ratio' datatype='real' name='[Calculation_1025413391279890432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[height]/[weight]' />
            </column>
            <column caption='Quadrant Identifier' datatype='string' name='[Calculation_1025413391287848962]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF AVG([avg]) &gt;= [Parameters].[Parameter 2] AND AVG([HR]) &gt;= [Parameters].[Parameter 1] THEN &apos;Good&apos;&#13;&#10;ELSEIF AVG([avg]) &gt;= [Parameters].[Parameter 2] AND AVG([HR]) &lt; [Parameters].[Parameter 1] THEN &apos;Worst&apos;&#13;&#10;ELSEIF AVG([avg]) &lt; [Parameters].[Parameter 2] AND AVG([HR]) &gt;= [Parameters].[Parameter 1] THEN &apos;In-Consistent&apos;&#13;&#10;ELSE &apos;Consistent&apos;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[HR]' role='measure' type='quantitative' />
            <column-instance column='[HR]' derivation='Avg' name='[avg:HR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg]' derivation='Avg' name='[avg:avg:qk]' pivot='key' type='quantitative' />
            <column caption='Bat Average' datatype='real' name='[avg]' role='measure' type='quantitative' />
            <column caption='Height' datatype='integer' name='[height]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1025413391279890432]' derivation='None' name='[none:Calculation_1025413391279890432:qk]' pivot='key' type='quantitative' />
            <column-instance column='[HR]' derivation='None' name='[none:HR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg]' derivation='None' name='[none:avg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1025413391279890432]' derivation='Sum' name='[sum:Calculation_1025413391279890432:ok]' pivot='key' type='ordinal' />
            <column-instance column='[height]' derivation='Sum' name='[sum:height:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weight]' derivation='Sum' name='[sum:weight:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1025413391287848962]' derivation='User' name='[usr:Calculation_1025413391287848962:nk]' pivot='key' type='nominal' />
            <column caption='Weight' datatype='integer' name='[weight]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:Calculation_1025413391279890432:qk]' filter-group='3' included-values='in-range'>
            <min>0.32272727272727281</min>
            <max>0.49299999999999999</max>
          </filter>
          <filter class='quantitative' column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:HR:qk]' filter-group='6' included-values='in-range'>
            <min>0</min>
            <max>563</max>
          </filter>
          <filter class='quantitative' column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:avg:qk]' filter-group='7' included-values='in-range'>
            <min>0.0</min>
            <max>0.32800000000000001</max>
          </filter>
          <filter class='categorical' column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:name:nk]' filter-group='4'>
            <groupfilter from='&quot;Adolfo Phillips&quot;' function='range' level='[none:name:nk]' to='&quot;Zach Crouch&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[usr:Calculation_1025413391287848962:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Good&quot;</bucket>
              <bucket>&quot;Consistent&quot;</bucket>
              <bucket>&quot;In-Consistent&quot;</bucket>
              <bucket>&quot;Worst&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:Calculation_1025413391279890432:qk]</column>
            <column>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:avg:qk]</column>
            <column>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:HR:qk]</column>
            <column>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]' scope='cols' value='Batting Average' />
            <format attr='subtitle' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]' scope='rows' value='Home Runs' />
            <format attr='subtitle' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-size' id='refline1' value='3' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='stroke-size' id='refline2' value='3' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[usr:Calculation_1025413391287848962:nk]' value='Performance'>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7'>Performance</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:HR:qk]' value='Home Runs'>
              <formatted-text>
                <run fontcolor='#d4a6c8'>Home Runs</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:avg:qk]' value='Bat Average'>
              <formatted-text>
                <run fontcolor='#d4a6c8'>Bat Average</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:Calculation_1025413391279890432:qk]' value='Ht/Wt Ratio'>
              <formatted-text>
                <run fontcolor='#d4a6c8'>Ht/Wt Ratio</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:name:nk]' value='Player Name'>
              <formatted-text>
                <run fontcolor='#d4a6c8'>Player Name</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[usr:Calculation_1025413391287848962:nk]' />
              <lod column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:name:nk]' />
              <tooltip column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[sum:Calculation_1025413391279890432:ok]' />
              <tooltip column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[sum:height:qk]' />
              <tooltip column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[sum:weight:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='none' scope='per-table' value='0.248' value-column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]' z-order='2' />
            <reference-line axis-column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]' enable-instant-analytics='true' formula='constant' id='refline2' label='Average' label-type='custom' scope='per-table' value='58.899999999999999' value-column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='198' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]</rows>
        <cols>[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Performance By Height'>
      <table>
        <view>
          <datasources>
            <datasource caption='baseball_data' name='federated.0a5e1gw024yd1h15xy0in1soijg4' />
          </datasources>
          <datasource-dependencies datasource='federated.0a5e1gw024yd1h15xy0in1soijg4'>
            <column datatype='integer' name='[HR]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Height (bin)' datatype='integer' name='[Height (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[height]' peg='0' size='1.98' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[HR]' derivation='Avg' name='[avg:HR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg]' derivation='Avg' name='[avg:avg:qk]' pivot='key' type='quantitative' />
            <column caption='Bat Average' datatype='real' name='[avg]' role='measure' type='quantitative' />
            <column caption='Height' datatype='integer' name='[height]' role='measure' type='quantitative' />
            <column-instance column='[Height (bin)]' derivation='None' name='[none:Height (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]' scope='rows' value='Batting Average' />
            <format attr='subtitle' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0a5e1gw024yd1h15xy0in1soijg4].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0a5e1gw024yd1h15xy0in1soijg4].[sum:Number of Records:qk] + [federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk])</rows>
        <cols>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:Height (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0a5e1gw024yd1h15xy0in1soijg4].[Height (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Performance By Weight'>
      <table>
        <view>
          <datasources>
            <datasource caption='baseball_data' name='federated.0a5e1gw024yd1h15xy0in1soijg4' />
          </datasources>
          <datasource-dependencies datasource='federated.0a5e1gw024yd1h15xy0in1soijg4'>
            <column datatype='integer' name='[HR]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='None' caption='Weight (bin)' datatype='integer' name='[Weight (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-1' formula='[weight]' peg='0' size='7.6' />
            </column>
            <column-instance column='[HR]' derivation='Avg' name='[avg:HR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg]' derivation='Avg' name='[avg:avg:qk]' pivot='key' type='quantitative' />
            <column caption='Bat Average' datatype='real' name='[avg]' role='measure' type='quantitative' />
            <column-instance column='[Weight (bin)]' derivation='None' name='[none:Weight (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Weight' datatype='integer' name='[weight]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]' scope='rows' value='Batting Average' />
            <format attr='subtitle' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0a5e1gw024yd1h15xy0in1soijg4].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0a5e1gw024yd1h15xy0in1soijg4].[sum:Number of Records:qk] + [federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk])</rows>
        <cols>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:Weight (bin):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Performance Of Good Players'>
      <table>
        <view>
          <datasources>
            <datasource caption='baseball_data' name='federated.0a5e1gw024yd1h15xy0in1soijg4' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='HR Parameter' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='58.899999999999999'>
              <calculation class='tableau' formula='58.899999999999999' />
            </column>
            <column caption='Bat Average Parameter' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.248'>
              <calculation class='tableau' formula='0.248' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0a5e1gw024yd1h15xy0in1soijg4'>
            <column caption='Ht/Wt Ratio' datatype='real' name='[Calculation_1025413391279890432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[height]/[weight]' />
            </column>
            <column caption='Quadrant Identifier' datatype='string' name='[Calculation_1025413391287848962]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF AVG([avg]) &gt;= [Parameters].[Parameter 2] AND AVG([HR]) &gt;= [Parameters].[Parameter 1] THEN &apos;Good&apos;&#13;&#10;ELSEIF AVG([avg]) &gt;= [Parameters].[Parameter 2] AND AVG([HR]) &lt; [Parameters].[Parameter 1] THEN &apos;Worst&apos;&#13;&#10;ELSEIF AVG([avg]) &lt; [Parameters].[Parameter 2] AND AVG([HR]) &gt;= [Parameters].[Parameter 1] THEN &apos;In-Consistent&apos;&#13;&#10;ELSE &apos;Consistent&apos;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[HR]' role='measure' type='quantitative' />
            <column-instance column='[HR]' derivation='Avg' name='[avg:HR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg]' derivation='Avg' name='[avg:avg:qk]' pivot='key' type='quantitative' />
            <column caption='Bat Average' datatype='real' name='[avg]' role='measure' type='quantitative' />
            <column caption='Handedness' datatype='string' name='[handedness]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;B&quot;' value='Both Hands' />
                <alias key='&quot;L&quot;' value='Left Hand' />
                <alias key='&quot;R&quot;' value='Right Hand' />
              </aliases>
            </column>
            <column caption='Height' datatype='integer' name='[height]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1025413391279890432]' derivation='None' name='[none:Calculation_1025413391279890432:qk]' pivot='key' type='quantitative' />
            <column-instance column='[HR]' derivation='None' name='[none:HR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg]' derivation='None' name='[none:avg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[handedness]' derivation='None' name='[none:handedness:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[height]' derivation='Sum' name='[sum:height:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weight]' derivation='Sum' name='[sum:weight:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1025413391287848962]' derivation='User' name='[usr:Calculation_1025413391287848962:nk]' pivot='key' type='nominal' />
            <column caption='Weight' datatype='integer' name='[weight]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:Calculation_1025413391279890432:qk]' filter-group='3' included-values='in-range'>
            <min>0.32272727272727281</min>
            <max>0.49299999999999999</max>
          </filter>
          <filter class='quantitative' column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:HR:qk]' filter-group='6' included-values='in-range'>
            <min>0</min>
            <max>563</max>
          </filter>
          <filter class='quantitative' column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:avg:qk]' filter-group='7' included-values='in-range'>
            <min>0.0</min>
            <max>0.32800000000000001</max>
          </filter>
          <filter class='categorical' column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[usr:Calculation_1025413391287848962:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_1025413391287848962:nk]' member='&quot;Good&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1025413391287848962:nk]' member='&quot;Q1&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:Calculation_1025413391279890432:qk]</column>
            <column>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:avg:qk]</column>
            <column>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:HR:qk]</column>
            <column>[federated.0a5e1gw024yd1h15xy0in1soijg4].[usr:Calculation_1025413391287848962:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]' scope='cols' value='Batting Average' />
            <format attr='subtitle' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]' scope='rows' value='Home Runs' />
            <format attr='subtitle' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-size' id='refline1' value='3' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='stroke-size' id='refline2' value='3' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:name:nk]' />
              <tooltip column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[sum:height:qk]' />
              <tooltip column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[sum:weight:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]' enable-instant-analytics='true' formula='median' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]' z-order='1' />
            <reference-line axis-column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]' enable-instant-analytics='true' formula='median' id='refline2' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='198' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]</rows>
        <cols>([federated.0a5e1gw024yd1h15xy0in1soijg4].[none:handedness:nk] * [federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Performance Of Star Players'>
      <table>
        <view>
          <datasources>
            <datasource caption='baseball_data' name='federated.0a5e1gw024yd1h15xy0in1soijg4' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='StarBatAvg' datatype='real' name='[Bat Average Parameter (copy)]' param-domain-type='any' role='measure' type='quantitative' value='0.26700000000000002'>
              <calculation class='tableau' formula='0.26700000000000002' />
            </column>
            <column caption='HR Parameter' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='58.899999999999999'>
              <calculation class='tableau' formula='58.899999999999999' />
            </column>
            <column caption='Bat Average Parameter' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.248'>
              <calculation class='tableau' formula='0.248' />
            </column>
            <column caption='StarHR' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='144.0'>
              <calculation class='tableau' formula='144.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0a5e1gw024yd1h15xy0in1soijg4'>
            <column caption='Ht/Wt Ratio' datatype='real' name='[Calculation_1025413391279890432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[height]/[weight]' />
            </column>
            <column caption='Quadrant Identifier' datatype='string' name='[Calculation_1025413391287848962]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF AVG([avg]) &gt;= [Parameters].[Parameter 2] AND AVG([HR]) &gt;= [Parameters].[Parameter 1] THEN &apos;Good&apos;&#13;&#10;ELSEIF AVG([avg]) &gt;= [Parameters].[Parameter 2] AND AVG([HR]) &lt; [Parameters].[Parameter 1] THEN &apos;Worst&apos;&#13;&#10;ELSEIF AVG([avg]) &lt; [Parameters].[Parameter 2] AND AVG([HR]) &gt;= [Parameters].[Parameter 1] THEN &apos;In-Consistent&apos;&#13;&#10;ELSE &apos;Consistent&apos;&#13;&#10;END' />
            </column>
            <column caption='Star/Potential' datatype='string' name='[Calculation_1025413391301644291]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF AVG([avg]) &gt;= [Parameters].[Bat Average Parameter (copy)] AND AVG([HR]) &gt;= [Parameters].[Parameter 3] THEN &apos;Star Player&apos;&#13;&#10;ELSE &apos;Potential&apos;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[HR]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1025413391279890432]' derivation='Attribute' name='[attr:Calculation_1025413391279890432:qk]' pivot='key' type='quantitative' />
            <column-instance column='[HR]' derivation='Avg' name='[avg:HR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg]' derivation='Avg' name='[avg:avg:qk]' pivot='key' type='quantitative' />
            <column caption='Bat Average' datatype='real' name='[avg]' role='measure' type='quantitative' />
            <column caption='Handedness' datatype='string' name='[handedness]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;B&quot;' value='Both Hands' />
                <alias key='&quot;L&quot;' value='Left Hand' />
                <alias key='&quot;R&quot;' value='Right Hand' />
              </aliases>
            </column>
            <column caption='Height' datatype='integer' name='[height]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1025413391279890432]' derivation='None' name='[none:Calculation_1025413391279890432:qk]' pivot='key' type='quantitative' />
            <column-instance column='[HR]' derivation='None' name='[none:HR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg]' derivation='None' name='[none:avg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[handedness]' derivation='None' name='[none:handedness:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[height]' derivation='Sum' name='[sum:height:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weight]' derivation='Sum' name='[sum:weight:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1025413391287848962]' derivation='User' name='[usr:Calculation_1025413391287848962:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1025413391301644291]' derivation='User' name='[usr:Calculation_1025413391301644291:nk]' pivot='key' type='nominal' />
            <column caption='Weight' datatype='integer' name='[weight]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[Action (Name)]'>
            <groupfilter function='level-members' level='[name]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:Calculation_1025413391279890432:qk]' filter-group='3' included-values='in-range'>
            <min>0.32272727272727281</min>
            <max>0.49299999999999999</max>
          </filter>
          <filter class='quantitative' column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:HR:qk]' filter-group='6' included-values='in-range'>
            <min>0</min>
            <max>563</max>
          </filter>
          <filter class='quantitative' column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:avg:qk]' filter-group='7' included-values='in-range'>
            <min>0.0</min>
            <max>0.32800000000000001</max>
          </filter>
          <filter class='categorical' column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:name:nk]' filter-group='4'>
            <groupfilter from='&quot;Adolfo Phillips&quot;' function='range' level='[none:name:nk]' to='&quot;Zach Crouch&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[usr:Calculation_1025413391287848962:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_1025413391287848962:nk]' member='&quot;Good&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1025413391287848962:nk]' member='&quot;Q1&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[usr:Calculation_1025413391301644291:nk]'>
            <groupfilter function='level-members' level='[usr:Calculation_1025413391301644291:nk]' />
          </filter>
          <sort class='manual' column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[usr:Calculation_1025413391301644291:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Star Player&quot;</bucket>
              <bucket>&quot;Potential&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:name:nk]</column>
            <column>[federated.0a5e1gw024yd1h15xy0in1soijg4].[usr:Calculation_1025413391287848962:nk]</column>
            <column>[federated.0a5e1gw024yd1h15xy0in1soijg4].[Action (Name)]</column>
            <column>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:HR:qk]</column>
            <column>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:avg:qk]</column>
            <column>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:Calculation_1025413391279890432:qk]</column>
            <column>[federated.0a5e1gw024yd1h15xy0in1soijg4].[usr:Calculation_1025413391301644291:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]' scope='cols' value='Batting Average' />
            <format attr='subtitle' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]' scope='rows' value='Home Runs' />
            <format attr='subtitle' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-size' id='refline1' value='3' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='stroke-size' id='refline2' value='3' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[usr:Calculation_1025413391301644291:nk]' />
              <lod column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:name:nk]' />
              <tooltip column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[sum:height:qk]' />
              <tooltip column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[sum:weight:qk]' />
              <tooltip column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[attr:Calculation_1025413391279890432:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label='Avg Bat' label-type='custom' scope='per-cell' value='0.26700000000000002' value-column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]' z-order='2' />
            <reference-line axis-column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]' enable-instant-analytics='true' formula='constant' id='refline2' label='Avg HR' label-type='custom' scope='per-table' value='144.0' value-column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='198' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]</rows>
        <cols>([federated.0a5e1gw024yd1h15xy0in1soijg4].[none:handedness:nk] * [federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='baseball_data' name='federated.0a5e1gw024yd1h15xy0in1soijg4' />
      </datasources>
      <datasource-dependencies datasource='federated.0a5e1gw024yd1h15xy0in1soijg4'>
        <column caption='Ht/Wt Ratio' datatype='real' name='[Calculation_1025413391279890432]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='[height]/[weight]' />
        </column>
        <column datatype='integer' name='[HR]' role='measure' type='quantitative' />
        <column caption='Bat Average' datatype='real' name='[avg]' role='measure' type='quantitative' />
        <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
        <column-instance column='[Calculation_1025413391279890432]' derivation='None' name='[none:Calculation_1025413391279890432:qk]' pivot='key' type='quantitative' />
        <column-instance column='[HR]' derivation='None' name='[none:HR:qk]' pivot='key' type='quantitative' />
        <column-instance column='[avg]' derivation='None' name='[none:avg:qk]' pivot='key' type='quantitative' />
        <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='29875' id='2' name='Overall Performance' w='78700' x='2300' y='10500' />
        <zone h='5500' id='3' mode='checkdropdown' name='Overall Performance' param='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:name:nk]' type='filter' values='relevant' w='16000' x='4000' y='2125' />
        <zone h='7625' id='4' name='Overall Performance' param='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:HR:qk]' show-domain='false' show-null-ctrls='false' type='filter' values='relevant' w='16000' x='23100' y='1250' />
        <zone h='7625' id='5' name='Overall Performance' param='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:avg:qk]' show-domain='false' show-null-ctrls='false' type='filter' values='relevant' w='16000' x='40800' y='1375' />
        <zone h='7625' id='6' name='Overall Performance' param='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:Calculation_1025413391279890432:qk]' show-domain='false' show-null-ctrls='false' type='filter' values='relevant' w='16000' x='59900' y='1500' />
        <zone h='12250' id='7' name='Overall Performance' pane-specification-id='0' param='[federated.0a5e1gw024yd1h15xy0in1soijg4].[usr:Calculation_1025413391287848962:nk]' type='color' w='14000' x='82900' y='17250' />
        <zone h='32500' id='8' name='Performance Of Good Players' w='44300' x='-200' y='40000' />
        <zone h='31000' id='13' name='Performance Of Star Players' w='44200' x='45100' y='41500' />
        <zone h='7250' id='14' name='Performance Of Star Players' pane-specification-id='1' param='[federated.0a5e1gw024yd1h15xy0in1soijg4].[usr:Calculation_1025413391301644291:nk]' type='color' w='14000' x='89900' y='52875' />
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='4' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Majority of Players are Right Handed' captured-sheet='Count of Players' id='1' />
                  <story-point caption='Players Divided into 4 quadrants of Performance.' captured-sheet='Overall Performance' id='3' />
                  <story-point caption='Players who have 1 dominate hand seems to have higher number of Home runs.' captured-sheet='Performance Of Good Players' id='4' />
                  <story-point caption='Star Performers have Height from (70 - 74) and weight from (160- 195).' captured-sheet='Performance Of Star Players' id='5' />
                  <story-point caption='We can use this dashboard to find Star Performers and Worst Performers.' captured-sheet='Dashboard 1' id='6' />
                  <story-point captured-sheet='' id='8' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Story 2' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='2' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Majorit of Players are right handed and only 9% are both handed.' captured-sheet='Count of Players' id='1' />
                  <story-point caption='Batting Average decreases with weight and Home runs dont show any trend' captured-sheet='Performance By Weight' id='2' />
                  <story-point caption='Batting average decreases with height and Home runs don&apos;t have a clear trend.' captured-sheet='Performance By Height' id='3' />
                  <story-point caption='Batting Average 0.2752 to 0.292 seems to have highest Home runs, probably star players' captured-sheet='Home runs By Bat Average' id='4' />
                  <story-point caption='Players  differentiated by performance.' captured-sheet='Overall Performance' id='5' />
                  <story-point caption='Good Players who have 1 dominate hand seems to have higher number of Home runs.' captured-sheet='Performance Of Good Players' id='6' />
                  <story-point caption='Star players have batting average higher than 0.2655 and Home runs greater than 144.' captured-sheet='Performance Of Star Players' id='7'>
                    <capturedDeltas>
                      <worksheet name='Performance Of Star Players'>
                        <filter class='quantitative' column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:HR:qk]' included-values='in-range'>
                          <min>142</min>
                          <max>563</max>
                        </filter>
                        <filter class='quantitative' column='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:avg:qk]' included-values='in-range'>
                          <min>0.26550000000000001</min>
                          <max>0.32800000000000001</max>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Is your player a star Performer or atleast have potential ?' captured-sheet='Dashboard 1' id='9' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Overall Performance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:name:nk]' type='filter' />
            <card param='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:HR:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:avg:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:Calculation_1025413391279890432:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0a5e1gw024yd1h15xy0in1soijg4].[usr:Calculation_1025413391287848962:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:Calculation_1025413391279890432:qk]</field>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:HR:qk]</field>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:avg:qk]</field>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:name:nk]</field>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[sum:Calculation_1025413391279890432:ok]</field>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[usr:Calculation_1025413391287848962:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Performance Of Good Players'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:HR:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:avg:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:Calculation_1025413391279890432:qk]</field>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:HR:qk]</field>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:avg:qk]</field>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:handedness:nk]</field>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:name:nk]</field>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[sum:Calculation_1025413391279890432:ok]</field>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[usr:Calculation_1025413391287848962:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Performance Of Star Players'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:HR:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:avg:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='checkdropdown' param='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:name:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0a5e1gw024yd1h15xy0in1soijg4].[usr:Calculation_1025413391301644291:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:Calculation_1025413391279890432:qk]</field>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:HR:qk]</field>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:avg:qk]</field>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:handedness:nk]</field>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:name:nk]</field>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[sum:Calculation_1025413391279890432:ok]</field>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[usr:Calculation_1025413391287848962:nk]</field>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[usr:Calculation_1025413391301644291:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Count of Players'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:handedness:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:handedness:nk]</field>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[usr:Calculation_1025413391287848962:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Overall Performance'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight field='[federated.0a5e1gw024yd1h15xy0in1soijg4].[usr:Calculation_1025413391287848962:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Performance Of Good Players'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Performance Of Star Players'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[usr:Calculation_1025413391301644291:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='worksheet' name='Performance By Weight'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:avg:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[:Measure Names]</field>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]</field>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:Weight (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Performance By Height'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[avg:HR:qk]</field>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:Height (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Story 2'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='worksheet' name='Home runs By Bat Average'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0a5e1gw024yd1h15xy0in1soijg4].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a5e1gw024yd1h15xy0in1soijg4].[none:Bat Average (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Count of Players' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      CkCSav4HQoOem7Zva1EAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Home runs By Bat Average' width='192'>
      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
      SURBVJDq2v8H7lzRCOUcfKAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Overall Performance' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Performance By Height' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Performance By Weight' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Performance Of Good Players' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3d928caZ7f8XdVV+dmzkkiKQaRoqRRDlTWaHY2aW5uZ724gLPhvb0DDneG
      z4Zx8B9gwDbuF4dfjLvDweed2T3Pzu5600SNcqIoiZJIUaSYc+husrvZsbrq8Q8chdmRZsRV
      t9hUPy9AgNhkV3376fpUfOopRQghkKQspa52AZK0mmQApKwmAyBlNRkAKavJAEhZTQZAymoy
      AFJWkwGQspoMgJTVZACkrCYDIGU1GQApq8kASFlNBkDKahkZgEAgsNolSBkuVctIRgYgGAyu
      dglShkvVMpKRAZCkF0UGII2EmcQ3O8n4+Dgz3kUM8+k33wnTJBKJ8Nv35yXCYRKfvRgLB4kn
      n3XmBuFI9HesPHvIAKSREQvT2XmNiYkJui5fZnRh6Qt/MzsyQFAHkUzQ09uH+Vu/n7tzh9nP
      /j/WfZmp0DPOPBnmds/g85SfFbTVLuDlplJQ1cDuLS30dFwBIYguTHDx0nXU0ma2VMDHH36C
      UtbA/t27SQSm+OQ3YzjLW9m7rRHbk1ZPps5A11W6R3zUb2mnpczK/cF7jI7OUty4kx3NZYx1
      X+P2/TGCthr2JUNcPHWGBUsRB/btIt9tfeGtkMnkFiCtTKbvXeXdn/ycybiVXJtO57V7bDr4
      Go1ijPvJSnZt38axE69SU+QkpqvsOvw1CpPj+MIPprHIxz/5Ce+++y6XeqcAUDU7HreD3htX
      8C8GmQzAgWPHiM0PERjpZ1jP58TXjrG+2E18pp/xRB6NG2pxPDFR2U1uAdJKpWLjHnZv3cRM
      73XG5xfRFTsehw0jx0EiYSKEAagoKOQWl5PndhB0Ox+bRj4n3voaNYpC/9UPSUQjTHmX2NzW
      yo3OGyQNlcKycnIcdlwuB/GYQV5hITaLimmaaMVN7Ns0w3DfbZLWXWyqLlqtxshIMgBppKgK
      wdHbvHu/F81ZxL5DrVSKEJ/88qcorjKOHMshlFA4/9EH7Nq7H7fLBYDd6cFqWZ6G1e1+OD2H
      OxfVacNthrjY2UtuTh42mw03KigKbpeL/HXl9J27wC9uCuwl9ZjxAD23bxOz5NHkca1GM2Q0
      JRPHBRofH6empma1y5AyWKqWEblTKGW1jNwFikQizM7OfvUfSlkrVctIxgRA13Ue7I1pmobT
      6fyKd6wO0zRR1czccL6I2u7du4fT6WT9+vUrel+qa1taWkrJMpK2AAgjwdzMNFFDo7yyCpuI
      MjU5g+oupLw4D5IRJiZmsOYWU1aYi9X66Py0zWYjNzc3XaU9l1gshsPhWO0yvkAIQSKRwG63
      p3U+drsdh8Ox4u8n1e0WCARSsoykLQBjvdfonxcUFXjIK65govcKY1EHeqiP5O524oOdjOku
      oj397Dp0hLLczFuopJdfmgKgMz0bZXv7UQpsCgqC3ojKvr17iUwNMDE7ik/P4Vj7Tvx9XUyE
      IjIA0qpIUwDiBL3znPvwF+i6yaZdR9E0DVVVsFqsJBJBrDY7CuBwKMRiGXcmVsoSaQqAi9Kq
      Mkq3tOMIDdIz5UWLLRGIxAn5pnB6qoiODrEQSzIztUB+fW16ypCkr5CmAKhsaKrl8tnfENXy
      2HfgAM4wnPnoV1hL6jjYUs06d4xPf/UznOVNHCrMSU8ZkvQV0nYQnFNaz2vfrn/shSa+/Z2m
      Rz9XNPN7bzWna/aS9Ewy84S2JL0gMgBSVpMBkLKaDICU1WQApKwmAyBlNRkAKavJAEhZTQZA
      ymoyAFJWkwGQspoMgJTV0tQZLsKdyzfxxXVyKxvZ1ljJ9MAthrwmm7a2ke9QmRzoYchr8MrO
      reTaLOkpQ5K+Qnq2AEvTTEQ9tLa2UldRiBEY4OaITk2hSeeNARa9w/ROxakrEVy91k9S3g8j
      rZK0bAH0QBDDZiOWSOLOs7I0OE3llnbWl5r4Zq7g91soa9xBTZXG7MwFoskW3Bbz4agQQggM
      w0hHac8tU2sTQryQ2kzTxDTNFc8n1bWlanppCYCSV0OVc5iJoRl6hn3sKQCLtryxURUTYaqo
      FgugoqgCIR59gbD8f9P87YHCM0O21/YgACudT6prS9X00hKAYGiJqoY28lQ/py6O4tiYz/jd
      +2xoUZjR89iRpzE6PECDXWMulstmK1iUR8cBqqp+bpiUTGIYRkbW9mCBSHdtmqahadqK55Pq
      dkvVMpKWAOQXFnD53CnmYjZ27G/HWeik2X2Wj6/C/kP7KXYp1Exf4tcXTY4dP4xVSUcVkvTV
      0hIA1Z5H+4lvfe61hu1HaXjs56adR2hCklaXvA4gZTUZACmryQBIWU0GQMpqMgBSVpMBkLKa
      DICU1WQApKwmAyBlNRkAKavJAEhZTQZAymoyAFJWkwGQspoMgJTVZACkrJbGAJgE/T6WYjpC
      CMKL80zNzBNLGghhsrToZXJ6joQhh4SQVk/aHpKnByZ5/4Oz1G07zo46lTOnr+J0Kqjlm9lT
      Z+XC+Rs4bILBiu0c2FyNKm+LlFZBmgIguNc7xIZNjViByEgfxbu+zp6qJNfO3GTWrVC25Rjb
      1tu4evYKEaMaT9qiKElPl5bFLjDWTaJoI5W2GeYjkEgoeDxWUDRslhjxuA1bnhNQ0Sw6hgG6
      0B8Oi2IYBrFYLB2lPbdMr+1BG6ZLIpFA07QVt0Gq2y1V00tLACbHRuibvMudJR+6tYaS9nKm
      R2ZobDDx67k051gYmplC91gJxN3YrWBVHw1xYbFYcDgc6SjtucVisYysTQhBIpHAbrendT42
      mw2bzbbiNkh1u6VqGUlLAFoPfJtWwDvdjz9WSMU6N2OnPuL/DSq07TlIaYmF0f4z/KxfsO3A
      MezyXJS0SlYcAGGaoEBST2Kx2r704LW4ooniz/6/97U32PvY7/adOMm+lc5cklJsheveODcu
      nGew/yb/82//lvP3vMiTmNJatsIA+LjTOc7tGxeobd9J39VuGQBpTVthAEqoqw4x5C2ipchO
      WeM65Ol7aS1b4TGAhcYdB9Bmgnh9Ohtqc9NTlSS9ICvcAizwwY9/zXQoQjSRXD4glqQ1bIVb
      ADeV68tZ/8oeqt0Kmi3zzodL0kqsMABxTEPngx/9A2Chuf0bvL67QR4HSGvWCgNgpbqhCS0c
      BxTKi3Pkwi+taSs8BtAoKC2nsrISV3SIuxOZ2SdGkp7VCgOg4s7No6CggJLqChYnp+R1AGlN
      W+EuUIy+Gx2MBaMoqpXDhzbJXSBpTXv2LYAZ4fL7HzEad3Do9ZO8tquevv5BuQWQ1rRn3AKY
      9Lz/DjfjTewpXuDv/vt/w+Vw88b3/0xuASQAhID7Ez6u3p0gEtdprC5ib2s1LkfmPVHzcc+4
      BTCZnozRtr2B2paNFMR1tn3zJOVOufhLy/ci9I97+dWlfqpKctneWMHYXICfX7iHYWT2xdJn
      3AIo5JbY+PX/+QfOqyYLoSC+n/2I0JE3OdneLLcCWS6RNDjTNcLBrevY2VyJoig01RTxD7+5
      yehsgPrKgtUu8ameMQAWdr/5Z+x+M73FSGuTYQj8wRjVJbkoyvLq0OmwUpjjZD4QzugApOVe
      LH3Jy6XTH/H+R2cZ94cRQjDafZkPT13CG44jTJ3hO1d4/+OLLMaNdJQgvUBWTaWiyEPfmA/T
      XD4tEgzHmfEvUVOS2R0mV3xH2MJEL7eHYmxuyWfBKKW+3P2FXaBEwqR+8y6cST/nb/VSvtVN
      97yH3U0K1zv72dmkMRhwsrdV4+rlHo4d3iKfFr+GaRaV1/c08PbHt5mYD+Jx2hiaXmBHUwUV
      RTmrXd6XWmEAvHzyy08Y9jspqannQsc8dd/b/YUAuAtLGTr/S0YjOdRvbGVpqo+aze2UFJmU
      DJ7H57dRvmEPBRUqBYOniSTApcpRIZ7Xao4Kke/S+ONXNxFLJAHY0VhKQY6DeDz+sLaXYFSI
      PCorrFy+08v/fXuSQ9/5qyceAOvxGBv3f4OmyCznrgxR2aCx4A2SzDGIGC5KXRYWAgsYRTZi
      hhOrBlaLHBXieWTCqBBf1i4vyagQFirrNtK2VWDY88lVn5zAhcleLt8YJCGgYH0bOTVVJH/5
      G37SpdC48whlZRb6PvmUd7tMNu49gdPy3J9Dkn4nKwzAHO+/d5mqw/vIsyhPvchRWr+NN+q3
      fe61429+7/M/n/zuymYtSWmwwgCUUF9vxxuIYHWoJJLyDI60tq0wAAvMzGk0bK+j2KaSm+9O
      T1WS9IKsMAAO3K4koWAEp1PBnpdMT1WS9IKsMAAqDZu3Mu6bYFK1ouZVpqcqSXpBVngl2EVh
      nklf9y16h6YpLCmW/YAkABK6we3BWW70TxNYyszrJE+ywi2Aj9OfDvLWX/4NrqnT/PSD6/z5
      9/bI5yxlsYRucLlngp+cvUtcT1LgcZKf4+Db+5poqy9d7fK+0goDYMNlDXPnZhdu7zCuglq5
      Bchipik40zXCry71s39TNU01RVy5O0EiafLJ9SGqS3PJ92TeRcPHrXDlncNrb53EGfUhynbw
      e4eaZACymC8Y4Ub/NAU5To7tqGdHcyXf2t+EYZjEEkmmvKHVLvErPfMdYd6xfvrGvJhC4PDk
      oCg6M/ML5NYUyRBkqUhcxxQCl10jEksghIt89/IaP5ZIYrdl/iX+Z94FioUDzM3NMT1wG6+l
      nLa6cmwldemsTcpwBR4nOa7lvke/vnyfb+xtZMobYnwuwOb6MtaX5a9yhV/tGQOgUt2yh+oW
      uHfRypC1hW/sbkhvZVLGy3HZOLGznp+e6yUcTfBf3rmIaZoc3V7HyfZmNEvmnx555l2goc5T
      nLo+hHdykEX1LuM3i2jYfZxj2+rkLlCWUhSFpuoi/vSb2+kensMUgpZ1xZQVetbEwg8ruCe4
      uLaVQ54aBIcfvpZbUvyl75JefqqqUFrg5ljB2twdfvab4ouryJXLu/SSWRvbKUlKExkAKaul
      JwAiyXh/N9c6u5hZjCCEYHakl86bPQRiOsJMMjPcS8eNHpb0zB44SXq5pSUAoZlRZqIKhTkK
      N271YYRG6Lznx6MGuHZzkKB/lNtDfgqsAa5eHyApBxiVVklanhTvKa9nZ7lJcG6U2YhBeGKc
      8lf2s7HMJHK2A59Ppax5B43VVhbPXySabMJtebQlEEJgZujzxzK1NiHEC6nNNM3faT6pri1V
      00tLABQEU0M9TIVsbG1rIn5vBpvNAqhY1CRG0opmtQIqqmpgikcNC8v/TyYz82YbIUTG1vYi
      2s00TQzDWPF8Ut1uqfqsaQlAZKafCb2EnVsrUBWwluUy3jvEhhaY0fPYlqfRMzJIg93KfDSX
      zVbQlEelWCwWbDZbOkp7bqZpZmRtD7YA6a5N0zQ0TVvxfFLdbqlaRtITgGiUsTu3Gb2j4Cys
      58TRrdQNn+HDi7Dn4H6KPSplExf55TmTQ8cOy1HhpFWTlgAU12/jrd8aFqVlz6u0PPZz697j
      tKZj5pK0AmkJgPRyMEyTpWgCIcDjtK2Z/j0rIQMgPVE0nuTcrVF6hucQCBqqCjm6rQ7TFIzM
      LDK5NEJJgYuGqkJsmobylN1YISCW0OkemieiG9SW5VNTmoeiKE99z4skAyB9gWEu39I461/i
      u0dbURWF87fHeO9cL1HfBKPeMFvbHHQNzHC9b5rvHG7B7XjyAWkwEuedj++gJ5MU5rq4dGec
      va01HH5l/cNnCayml2+bJj03XzDK0NQCX9/TQE1pHlUluZzYWc/EXIC7I/P80YktfO/YJv78
      5A4UReFS9/gTpyOE4JPOQSqKPPyr1zfzB6+28ecnd3Kld4KxuUBKap0d7KZv0r/8gxnh9o0u
      fKH4k//YTDI9M/e5EbRlAKQvMIzlazI266NbGjXNgm6YlBW6cdo0LKqK026luaaIoanFJ05H
      CBiaXqS1tgSbZsGiquR7HKwrzWN05snvWam5e/e40t+PACJTA5zv6mLOF33yH4sk9weGESLI
      nc4+YmR4AG598jPO3F1eu4jYFG//8D2m/E/5cMkIt7rvAwkW/SEy71rt2lGQ46Qw18nN+zOE
      owkiMZ27I3PoSZOEbvBgBWqagoVQlDz3U4ZkVyDXZccfjD58nG7SMAmEY+Q+7T0rZHXnUWou
      MZMQjEwtUFddjIKJb7SHn7zzQ35xupNwdIlbFz7khz/8ETeHvUCSaEJgLPkz+xhA0U2mZqcx
      Wmrw9Q8Rsgn0eBIzmSASjaPaHDhtGslEjFgkwJxvEShnbnYRd76LWDSCYao43S4UM0kikSBp
      gsPpxPoSntFIFYdN48TOet4718vg1AKqohBLJPnOoRZ+9sEsl3vG0TzFTMwH6R318saB5idO
      RwEOblnHhx2D6EmdiqI8ekbnEQKa16Xo5hLFxsYWN/f75rGGkxQXeEAPcfb8GRZVD6HODiry
      LSw5q/jeHx7k4uVbQBzffBBBSWYHQHUVUGdZZHhJMO8P01SSAyTou36T+zN+okoOr7c3cebU
      JZKqidcsBRYZ6J+josLK1YuXCMQNqjcepChyh477PhTDoOqVgxxqW7faHy+jVRTl8INvbmdg
      yo8QUFuej9thI+JvoKNvjnfP3KUk38XJ9mZqy5/8EDxFUWhZXwLAmZvDXLk7RW1FPn/82mac
      ttQ9P9he0oLZ8UMC5d9ivXUAAFt+FSdf/za5iRA+7wS9CwKMJOHYo+MDr28kswMAFio3VjHe
      d5ukkY/HvQRhP1dvdaPY3QjTZGTUS/3BI7QVOznXMfDwnbHoIoFAmGA0Qv/wGHuq8jn4+l7y
      42H6FlOz//mys9s0NtV+fnS3PLedk+3NbNiw4eGpzC87maMo0LK+mNoyD3abHUVVUFN49ie/
      shKX5qSisg3PplK0hQg4SziyfyO//uk7qHnrOH58B+WzF3n3Z32UbGhBUdysryulrCgn0wMA
      zpxKIvf+Ec+BH2CdvQSOHOoryojnV5OjWCgssXO98waRIjfjPgEsr3Ei0TCegirKKuNMRwCU
      5S9sNT/MS0JRwLKCXUhFWV7oV/KeZ1Xe2AhA7u725RfcjZ/9ZiPf++OND/+usP1rtLU/el/r
      ljwgw68D1G3dis3mZsfx7+Iqc2AUbkdz5FJ+9AijE3Mo9jzKKktpV5z4IwZHGooBJ3vb88nN
      tSDEBKbNQ4vHg9OqYHE40Vw2mnMz+9GdmcA0BRPeIF33ZxBC0FpbSl1F5o/zs1KKSPdjBX8H
      4+Pj1NTUrHYZT5QND8kTQnB3xMv7V+/TUFWIqioMTPrZ31aDI+HF7XbT2Nj41RN6TKrb7dat
      W5l7P4C0ti1FE5y7NcKrO+t5paEcgMFJP7+83M+WMoHbvfpPBopGo/h8vueeTkZuAS5cuEAg
      kJorhamm6zpWa+rOYKRSMplE055/neYPRjl/e4zjO+rwOJe7OMQSST69MUyuJUJ9VQmVlSt7
      OEqq2625eflA/Hll5BbA5XLhdDpXu4wnyuQApKq2nHydnqkoii2H8s9OcU75QjhzClhXkEdJ
      SQHl5eWrUtsDqqqmpC9RRgagpKREHgOsUCqPAUwhcBTWcKl7nDJLEaqqMh4xef34QYosQTwZ
      cAwwPv7k/kcrlZYAmHqMoXs3mYiXcGRnA8LU6b78KffnBdsPHGBdnkp3xwX65pLsO3aMqjyH
      PD2ZQVRFYXtTBR6njY7eSSJxndbaEjbXlTLQv0DG7TM/h7T0B0hGgiiFxVgTyzct63PdTFia
      +fqRZvq7+pmfHcBvq+eN4230XOsm8TK16EtCs6g0ryumsbqISEznFxf7+E8/PM+PT3VzZ3AW
      03w5vrS0bAFseaVsyNOYG5sDYGl+iZrmbTjzBeX2EQIBGyXr2rDlqhQ7B4klwGJJPuymahgG
      iUQiHaU9N9M0M7I2IURK280Ugis9k1y7N0U4prOlrgSB4Mq1cS51j1FcVsWe1spnvqqb6nZL
      1Wd9IccAmiaIxZIgDHTDRo5VJZqIA1ZM04LFsnyX/wOqqqbkbEY6mKaZsbUJIVJW21I0Qdfg
      HC21pYzMLPL7h1uXuzcP9LO+opibA7Nsb67E7Xi2+aW63VK1jKTlm0wsLTA+Pczs7CKDw7lU
      1qxn9twFbpWoBFwVNBVp3L9+le45lSVHFU4LnzuiVxQFVc3c3pqZWJsQIqXtJgA9aaJZVOxW
      Dau2vIKyWzWsVgt6dLlb9Erml8p2S9VnTc9BsKETjVqorS0iGo2jumvZs0VnOgi7N9Titips
      azGZCprsbarDIo+AM4ZhmIzOBrg7Os9SNMGMf4n5QJihqUUEgrmFMFabndq6Upz2Ly4+etIg
      mkhiURScDmtKO76lQ1oC4MgrpW3L53sR2qsbeLwHeEnNhs+6rUmZQgjBlbuTXOoeZ315HuvL
      8zh/e5R8j4P/8dOrAOixBLFEktd2bXi4VXjAH4zy4bVBxucC2K0auzZWsre1GlXN3BBk5s6s
      tCrmFyNc6hnnD15tQwFO3Rgm3+MkFI1zbFsdBblOurribNpQicvx+YtaiaTBP314i6aaIg6f
      2EIoGuf9KwNYVIXdLVWr84GegQyA9NC0L0S+x0FCN/jVpX5aa0toqyvl7Y/v0D08j9thJRxJ
      cL1vmpHADd461Ep5kQeAvjEvNquFo9tqcdqtCOFB7IYPOgbY2rCyq8YvUuYdzUmrJt/jIBJN
      cLF7jMriHI5ur8WqqVQUeViKxinIcfCtfU28eXAjjVWFfNw5SOyzaz1x3cBuXb5ZHpYPUl0O
      62f3EGfuNQMZAOmh6pJcKktyudE/QySm03F3kk86h1hfno9mUXHatYf/tjdV4AtGWVyKAVBf
      UcD8YpjR2UViiSShSJzOvikaqwuxaZn7wGy5CyQ9ZLGofGtfI0nD5NytUQKROMd31KNZVM52
      jXz24OvlXrpx3UBRFCyfHeAW5jo5sbOen5+/R0GOk1giiaap/NGrm7FYVHR9FT/Yl5ABkD7H
      abfy5sGN2DSVoelFeobnmfAG8ThtTPtCJCxh7FGD/ntBGqoKKMx91Gt3R3MltRX5jM0GcNqt
      bKgs+MKZokwjAyB9gd2qcbK9meHpRSa9QbY3l1OS5+bc7VE+vDSA3eHkyL7tHNq6/uE+/wNF
      uS6Kcl2rVPnKyQBIX6AoYNUsNNUU0VRT9PD1b+1rokQL4XK52NJW94WFfy2SAZCemWZR8Tht
      uJy2FS/8j/f1yiRrP8LSmpAJI0E/iQyA9DvrvvQpA3PB5R8MP7/5zTnC8ac8uC4ZZnh87sUV
      94xWJQCJiJePf/7P/Pjtd+gc8r1Udxhlk/D0CLeGphAI/N3X6ZrzkYgbT/7jZJixSS9Gcp6u
      myMZM3jxqhwDhGaGyWs5zvF6GxcvdBNdvx9XZu4iSl/CVlRJQWSa+WgtvTMKW6sdgE5/5xWu
      943jrGjlm3trOPXBKWYXFkgWb2O/6SYYTBCZH+aTTy8SEk72Hj6BGL/OnbEZFoOCfa9/ndbK
      J483mmqrcxCsx3EXFKJaVVzWGHoSkAFYexQnlTVOxgcmEZ58PHEvLE1z9ko3msfF/O0eBgp1
      inYf51hegkvdi4BOJJLASC4PKhr1zXJ3eIINBuw48Qbu2TEmk0vAyxwAzUY0GMAsshHTbVjl
      uag1q7CoksEzn1DS9vtEJ7ygWSmtrOeV9j3YI0skopOMzy3g12MEowawPGrFxPQk9ZsPsHFp
      mCHdANWOx2VDtVh5kb2nV2XRyymvw/vhh7zbKajb8SpOufZfkyrr68nLL6Zxw07KN+QSsDfh
      zKvm4K4wVzouYi+q4+C+7SxcPM/NeVi3YROqxUFTc5KqoiIuXrmJNb+KltpyPKIQt0WFoiLK
      X+Ap01UZGe7BU82Xb6lTvnCKTI4NunKpHBfoy9y6dQuXy7XicYFSNWrdA6laRlZlC7A8rnxm
      nheW0iNTu0RnzNiguq4/bKTBwUE8Hs8qV/RkhmFk5FVNIQSmaaa9tnA4jKqqKx66MtXtFgqF
      yMnJee7pZMzh5+PjRno8nozdBUokEthsT34m7moSQqDrekbWBqlvt1TtAskrwVJWkwFYoUwc
      E+iBTNw1eyBT2y0zq8pgmToqnKIoGR2ATG03GQApq2VuAIRJOLiIzx8g+dhIxOKz173+AMl0
      n78Sgng4iNfnJ5E0H3tZoMcjBEMRVm2QZGEQXPCxEFjCeLx9DJ3ggh+ff5GEsUpdzoRJdCmA
      17eA/lhtpqET8Pvwen3E9BTUJkyioS/ORwiTaGgRr2/xc8vOk2TmdgmIeEc5c7Ubi2KQv2Ef
      e5rLUBQI+8Y4d+kWKjoFLUfZ3VD0pc+pfR56ZIFzp8+CpqAWbeHwzno0BZK6lyvnelgyFQ4d
      P4z7RbeiEATGejh9ZxKLodOw8zAtVcuP/ZwauEn3SBCSMXJqt7J/04s/mxYLznL2fAeqxcBe
      uZuDW6pRFYj6R+m4OYJFjaPbazl6YBO25/juYovTnL3YiaqaOGv20N5WiapALDjDmTMdqKqB
      Z0M7+1vKn76MiAw0NjYmBrqviKHJoEhGg+L0havCNM3l3/VcEL2TEWEkI+L8mYsibqSvDv/k
      LXG9Z1YIYYrOC6fEQtT83O+7rl4SS3r65v9UpiGuXTwrFsIJEZsfEee77j/6lWkKUwgRnBkW
      V+8MrEJxQkwOXhc9Az5hGklx8dxpEdEftZtpmiI4OyBOn78hYs/x3Y2NjYnx+9fEvWG/MPS4
      uHDunIgll+cz13dJdI0uCSHi4vLpcyKcfPp0MnYLgKJgs1lRVeNzj8NUTYHNYUdRBKqqY5qk
      b0fOMLA5XYCCpqkkDZOM6baqWbFZVGw2jUQi+vBlBZPpgbuMBq1s3byy7gqpoggTm8MBnz0g
      e/lhGgoYce52nKfPm6SlbTvW591yC7Da7cu9ChQQpgCLAqaBzekEVCyaTtLgqV9bxh4DWFUF
      /2KAWCSIqTw2DqXVSsDnQ4/METPcpPPEh2pzsuidwUiECITBbsuU5lKwG3Hml2IsLASw2x9d
      YPKO9uNTCti+tQmndXXCatFsLPi9GPEgkYSK9tnw34m4Tv3Oo5w8sY/ZwTssPav32IkAAAT8
      SURBVOdYQRZNY2HBTzIeJJa0YPlsPordSWBulmR0nqWEG9uXrOYzpivE48bHxykvcHDh3AW8
      UQuvHDjGOs3LUCSfDQU6F89eYD6qsPPwa9SVuNL2fDEjEeb6hU8Z8cZp2nWE1mJB/1yCpmKD
      9z+6indxgbzqZo4daqfwhR4ICGL+cU6dvUpcy2fPoYPkhUeY0WqJ9n3I7fEYNqtKSeMujrxS
      +wLrWpaMLnL1wlkmF5K0tb9KgzvMwKJGhWWe8533iCehsnk7u9vqsP6O65Tx8XEqijxcPn+O
      maBBW/ur1DuDDAYdNJZauHL2DFMhwSsHTtBUkfPUZSRjA5CpXSGkzCC7QkhSCsgASFlNBkDK
      ajIAUlaTAZCymgyAlNVkAKSslrldIdaIgY73+N8/76Gg0AXFLfzVv/wG1sd6XplxP4NTSTbU
      lZIIzjETslBbVcji1CBBWyXrip9tLP2xGx/xv356nu/84G/Yvj4z75dei2QAnlM8EqPl6Ft8
      d08B//lv/4kIrxEdHScQNyksLUcfPcPf/XyRH3z/a4R6T/Pruxp/9NZx3OEFltwVBLzThMJx
      IgmTqvW12I0lxidnMCwOSkrLyHPbAUHfvQHqaoq52z/CK2U1zIYtlBfa8c0u4inMxTc5RkQ4
      Wbe+ksjCHIYJusWFIxlgbjFCTlEF5UUeQt5pZvxhHDkFVJUVEJibwrekU1q1jnyX9Ss/78tG
      BuC5Jej49TtMXndTsHkfOeYSVzo6mPTOMqVW88YGP8EFHxMzs+jzfhZ9BmOzC+QMnWa0YSOD
      1/6eKccmtJmb5B/9S/J736afdTj8A3h2vcV39zeA6WdgIs6eV3fy/oUekttj/P0/DvPv/qSV
      t9/r5vA2B6dvzGELT1F14gfETv9XRuy7OHHiEMZ4B/3TPkamBH/4veP88sc/Yd3mrVzv7OL7
      /+IE75/qwGE3WLBv5N//yYnVbswXTh4DPDcbu7/5h/z1v/lT9K5zDM1Ocuv+KIlkgqn5AC2b
      W6jZsJX2ndvZtKWJDa07ObK94bG3u9m69zBHt9cSCEa4OxXkzZNvsKepnAf3jIQHu+i8N8Cp
      T85wv6uDMdtWSsUAVztuUrppEzO3O/DHBO6y9ZQ4VYQtn2Pf/BZbaz3cvHmHuG4S9E0xOXUf
      a3U7b37z6xTZ40yPdDM6E0S15rCusujJH+8lJwPw3JLcvfwx7773K+bVPFzGEqGESl5ODlZN
      QfFUkBi9wEfnutDcpfj7zvGri3efOrWGUgf//OMfc+728MPX7ty4wzf+4j/yb//6P/Cvj1Vw
      8+487a0l/POFEbZvrKPllR0Y0RAOhw1FgMVqxW61IkydUCiOOzcPh6aSX1RLePA0b7/3c6YC
      gsr6LRTYEmC1v9DxODOJ7Az3nBLREH5/EFNRcHgKKMixsjDvJaloWGwOCnNdBHxz6KqLwjwX
      wQUfuuoiz26Q1HJREiFUhwdLMkIMB7PdZ7jaN83s9Cz7v/MD9tbnEwkGUF0eHJqFRCRETLHj
      VnV8oQSFhfmoQmfB5yOeVMgtKkaJL2F15WK1wNKCl3BSxaZZcGiCi59+wExgielIPn/x/e8g
      wguEognsnvw19XC7VC0jMgAZZnFmmNGZAM78MurWVfzO3YWfxNBjjA3dJxCDqrominPtaetK
      nm5remxQ6enyy+vIL0/PtC1WB3XNm9Mz8TVKHgNIWe3/A7RFHG/W+k6BAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Performance Of Star Players' width='192'>
      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
      nWfPlgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 2' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
